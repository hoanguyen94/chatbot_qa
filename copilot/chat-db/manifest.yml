# The manifest for the "chat-db" service.
# Read the full specification for the "Backend Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/backend-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: chat-db
type: Backend Service

# Your service does not allow any traffic.
network:
  connect: true

serviceConnectConfiguration:
  enabled: true
  namespace: chat-service
  services:
    portName: tcp
    discoveryName: chat-db
    port: 5432
    clientAlias:
      port: 5432
      dnsName: database
      logConfiguration: fluentd

portMappings:
  name: tcp
  containerPort: 5432
  port: 5432

# Configuration for your containers and service.
image:
  location: postgres:alpine
  port: 5432
  http:
    healthcheck:
      path: '/'
      port: 5432
      success_codes: '200'
      healthy_threshold: 3
      unhealthy_threshold: 2
      interval: 10s
      timeout: 10s
      grace_period: 10s

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.

storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.
  volumes:
    myManagedEFSVolume:
      efs: true
      path: /var/efs
      read_only: false


# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info

secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.
  POSTGRES_USER:
    secretsmanager: 'chatbot-db:username::'
  POSTGRES_PASSWORD:
    secretsmanager: 'chatbot-db:password::'
  POSTGRES_DB:
    secretsmanager: 'chatbot-db:dbname::'

# You can override any of the values defined above by environment.
environments:
 test:
   count: 1               # Number of tasks to run for the "test" environment.
   deployment:            # The deployment strategy for the "test" environment.
      rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.